{"version":3,"file":"component---src-pages-portfolio-mdx-frontmatter-slug-tsx-content-file-path-e-work-project-portfolio-henry-32144-github-io-portfolio-kaggle-kuzushiji-index-mdx-a78d64ba1752cdb39d6f.js","mappings":"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","sources":["webpack://cheng-han-wu/./portfolio/kaggle-kuzushiji/index.mdx","webpack://cheng-han-wu/./src/pages/portfolio/{mdx.frontmatter__slug}.tsx","webpack://cheng-han-wu/./src/components/infoCard.tsx","webpack://cheng-han-wu/./node_modules/@mdx-js/react/lib/index.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  return React.createElement(React.Fragment);\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"E:/Work/project/portfolio/henry32144.github.io/portfolio/kaggle-kuzushiji/index.mdx\";\nimport * as React from \"react\";\nimport {Link} from \"gatsby\";\nimport {GatsbyImage, getImage} from \"gatsby-plugin-image\";\nimport {AiOutlineTeam} from \"react-icons/ai\";\nimport {MdOutlineArrowBack, MdCategory, MdOutlineCode, MdDiscount, MdOutlineLink} from \"react-icons/md\";\nimport {RiExternalLinkLine} from \"react-icons/ri\";\nimport Card from \"../../components/card\";\nimport InfoCard from \"../../components/infoCard\";\nimport PageTitle from \"../../components/pageTitle\";\nimport Seo from \"../../components/seo\";\nconst Project = _ref => {\n  let {data, children} = _ref;\n  const imageData = getImage(data.mdx.frontmatter.hero_image);\n  const parseDomain = url => {\n    const domain = url.replace(\"https://\", \"\").replace(\"http://\", \"\").split(/[/?#]/)[0];\n    return domain;\n  };\n  return React.createElement(Card, null, React.createElement(\"div\", {\n    className: \"py-12 px-4\"\n  }, React.createElement(PageTitle, {\n    text: \"Project\"\n  })), React.createElement(\"div\", {\n    className: \"pb-4 inline-flex px-4\"\n  }, React.createElement(Link, {\n    className: \"text-md font-medium text-neutral-400 inline-flex items-center\",\n    to: \"/portfolio\"\n  }, React.createElement(MdOutlineArrowBack, {\n    className: \"text-neutral-400\"\n  }), React.createElement(\"span\", {\n    className: \"ml-1\"\n  }, \"Back to Portfolio\"))), React.createElement(\"div\", {\n    className: \"pb-4 px-4\"\n  }, React.createElement(\"h4\", {\n    className: \"text-2xl font-medium mb-2.5 dark:text-white\"\n  }, data.mdx.frontmatter.title)), React.createElement(\"div\", {\n    className: \"pb-4 px-4\"\n  }, React.createElement(\"div\", {\n    className: \"grid grid-cols-12 gap-4\"\n  }, React.createElement(\"div\", {\n    className: \"flex col-span-12 sm:col-span-6\"\n  }, React.createElement(InfoCard, {\n    icon: React.createElement(\"span\", {\n      className: \"p-1 text-[#2d64bc] dark:bg-dark-icon-bg mr-2.5 shadow-md flex items-center justify-center rounded-md w-12 h-12\"\n    }, React.createElement(MdCategory, {\n      size: 26\n    })),\n    label: \"Category\",\n    content: data.mdx.frontmatter.category\n  })), React.createElement(\"div\", {\n    className: \"flex col-span-12 sm:col-span-6\"\n  }, React.createElement(InfoCard, {\n    icon: React.createElement(\"span\", {\n      className: \"p-1 text-emerald-500 dark:text-emerald-600 mr-2.5 shadow-md flex items-center justify-center rounded-md w-12 h-12\"\n    }, React.createElement(AiOutlineTeam, {\n      size: 26\n    })),\n    label: \"Team Members\",\n    content: data.mdx.frontmatter.teamMembers\n  })), React.createElement(\"div\", {\n    className: \"flex col-span-12 sm:col-span-6\"\n  }, React.createElement(InfoCard, {\n    icon: React.createElement(\"span\", {\n      className: \"p-1 text-purple-600 dark:text-purple-600 mr-2.5 shadow-md flex items-center justify-center rounded-md w-12 h-12\"\n    }, React.createElement(MdDiscount, {\n      size: 26\n    })),\n    label: \"Type\",\n    content: data.mdx.frontmatter.type\n  })), data.mdx.frontmatter.link && React.createElement(\"div\", {\n    className: \"flex col-span-12 sm:col-span-6\"\n  }, React.createElement(InfoCard, {\n    icon: React.createElement(\"span\", {\n      className: \"p-1 text-amber-600 dark:text-amber-600 mr-2.5 shadow-md flex items-center justify-center rounded-md w-12 h-12\"\n    }, React.createElement(RiExternalLinkLine, {\n      size: 26\n    })),\n    label: \"Preview\",\n    content: React.createElement(\"a\", {\n      className: \"hover:text-indigo-500 duration-300 transition\",\n      href: data.mdx.frontmatter.link,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }, parseDomain(data.mdx.frontmatter.link))\n  })), data.mdx.frontmatter.code && React.createElement(\"div\", {\n    className: \"flex col-span-12 sm:col-span-6 lg:col-span-4\"\n  }, React.createElement(InfoCard, {\n    icon: React.createElement(\"span\", {\n      className: \"p-1 text-violet-600 dark:text-violet-600 mr-2.5 shadow-md flex items-center justify-center rounded-md w-12 h-12\"\n    }, React.createElement(MdOutlineLink, {\n      size: 26\n    })),\n    label: \"Code\",\n    content: React.createElement(\"a\", {\n      className: \"hover:text-indigo-500 duration-300 transition\",\n      href: data.mdx.frontmatter.code,\n      target: \"_blank\",\n      rel: \"noopener noreferrer\"\n    }, parseDomain(data.mdx.frontmatter.code))\n  })), React.createElement(\"div\", {\n    className: \"flex col-span-12\"\n  }, React.createElement(InfoCard, {\n    icon: React.createElement(\"span\", {\n      className: \"p-1 text-rose-600 dark:text-rose-600 mr-2.5 shadow-md flex items-center justify-center rounded-md w-12 h-12\"\n    }, React.createElement(MdOutlineCode, {\n      size: 26\n    })),\n    label: \"Skills\",\n    content: data.mdx.frontmatter.skills\n  })))), React.createElement(\"div\", {\n    className: \"pb-4 px-4\"\n  }, React.createElement(\"p\", {\n    className: \"text-gray-500 text-lg dark:text-gray-400 leading-7\"\n  }, data.mdx.frontmatter.description)), React.createElement(\"div\", {\n    className: \"overflow-hidden rounded-lg pb-12 px-4\"\n  }, imageData && React.createElement(GatsbyImage, {\n    className: \"w-full rounded-lg h-auto\",\n    image: imageData,\n    alt: data.mdx.frontmatter.hero_image_alt\n  })));\n};\nProject\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(Project, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nconst query = \"3519338050\";\nexport const Head = _ref2 => {\n  let {data} = _ref2;\n  return React.createElement(Seo, {\n    title: data.mdx.frontmatter.title\n  });\n};\n","// Import React\r\nimport React from \"react\";\r\n\r\n// Define the component\r\ntype InfoCardProps = {\r\n  icon: React.ReactNode;\r\n  label: string;\r\n  content: string | React.ReactNode;\r\n};\r\n\r\nconst InfoCard: React.FC<InfoCardProps> = ({\r\n  icon,\r\n  label,\r\n  content,\r\n}) => {\r\n  return (\r\n    <div className=\"flex items-center\">\r\n      {icon}\r\n      <div className=\"space-y-1\">\r\n        <p className=\"text-xs text-gray-500 dark:text-gray-400\">{label}</p>\r\n        <h6 className=\"font-medium dark:text-white\">{content}</h6>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Export the component\r\nexport default InfoCard;\r\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('mdx/types.js').MDXComponents} Components\n *\n * @typedef Props\n *   Configuration.\n * @property {Components | MergeComponents | null | undefined} [components]\n *   Mapping of names for JSX components to React components.\n * @property {boolean | null | undefined} [disableParentContext=false]\n *   Turn off outer component context.\n * @property {ReactNode | null | undefined} [children]\n *   Children.\n *\n * @callback MergeComponents\n *   Custom merge function.\n * @param {Components} currentComponents\n *   Current components from the context.\n * @returns {Components}\n *   Merged components.\n */\n\nimport React from 'react'\n\n/**\n * @type {import('react').Context<Components>}\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components and\n *   `MDXProvider` to set context based components instead.\n */\nexport const MDXContext = React.createContext({})\n\n/**\n * @param {import('react').ComponentType<any>} Component\n * @deprecated\n *   This export is marked as a legacy feature.\n *   That means it’s no longer recommended for use as it might be removed\n *   in a future major release.\n *\n *   Please use `useMDXComponents` to get context based components instead.\n */\nexport function withMDXComponents(Component) {\n  return boundMDXComponent\n\n  /**\n   * @param {Record<string, unknown> & {components?: Components | null | undefined}} props\n   * @returns {JSX.Element}\n   */\n  function boundMDXComponent(props) {\n    const allComponents = useMDXComponents(props.components)\n    return React.createElement(Component, {...props, allComponents})\n  }\n}\n\n/**\n * Get current components from the MDX Context.\n *\n * @param {Components | MergeComponents | null | undefined} [components]\n *   Additional components to use or a function that takes the current\n *   components and filters/merges/changes them.\n * @returns {Components}\n *   Current components.\n */\nexport function useMDXComponents(components) {\n  const contextComponents = React.useContext(MDXContext)\n\n  // Memoize to avoid unnecessary top-level context changes\n  return React.useMemo(() => {\n    // Custom merge via a function prop\n    if (typeof components === 'function') {\n      return components(contextComponents)\n    }\n\n    return {...contextComponents, ...components}\n  }, [contextComponents, components])\n}\n\n/** @type {Components} */\nconst emptyObject = {}\n\n/**\n * Provider for MDX context\n *\n * @param {Props} props\n * @returns {JSX.Element}\n */\nexport function MDXProvider({components, children, disableParentContext}) {\n  /** @type {Components} */\n  let allComponents\n\n  if (disableParentContext) {\n    allComponents =\n      typeof components === 'function'\n        ? components({})\n        : components || emptyObject\n  } else {\n    allComponents = useMDXComponents(components)\n  }\n\n  return React.createElement(\n    MDXContext.Provider,\n    {value: allComponents},\n    children\n  )\n}\n"],"names":["_createMdxContent","props","React","wrapper","MDXLayout","Object","assign","_provideComponents","components","Project","_ref","data","children","imageData","getImage","mdx","frontmatter","hero_image","parseDomain","url","replace","split","Card","className","PageTitle","text","Link","to","MdOutlineArrowBack","title","InfoCard","icon","MdCategory","size","label","content","category","AiOutlineTeam","teamMembers","MdDiscount","type","link","RiExternalLinkLine","href","target","rel","code","MdOutlineLink","MdOutlineCode","skills","description","GatsbyImage","image","alt","hero_image_alt","GatsbyMDXWrapper","GATSBY_COMPILED_MDX","Head","_ref2","Seo","MDXContext","useMDXComponents","contextComponents"],"sourceRoot":""}